--- microdns/compat/compat.h	2017-10-09 15:05:07.699932100 +0200
+++ microdns/compat/compat.h.msvc81	2017-10-09 15:05:03.863340900 +0200
@@ -60,12 +60,8 @@ static inline int os_wouldblock(void) {r
 #if defined (_WIN32)
 
 # include <stdint.h>
+# include <windows.h>
+#if defined(_WIN32_WINNT) && _WIN32_WINNT <= 0x603
+#undef WINAPI_FAMILY
+#define WINAPI_FAMILY WINAPI_FAMILY_DESKTOP_APP
+#endif
 # include <winsock2.h>
-# include <windows.h>
 # include <ws2tcpip.h>
 # include <iphlpapi.h>
 
--- microdns/configure.ac	2017-10-09 15:15:57.839744500 +0200
+++ microdns/configure.ac.msvc81	2017-10-09 15:10:57.411898400 +0200
@@ -223,10 +223,6 @@ AC_LINK_IFELSE([
         # if _WIN32_WINNT < 0x600
         #  error Needs vista+
         # endif
+        # if _WIN32_WINNT <= 0x603
+        #  undef WINAPI_FAMILY
+        #  define WINAPI_FAMILY WINAPI_FAMILY_DESKTOP_APP
+        # endif
         #include <ws2tcpip.h>
         #else
         #include <sys/socket.h>
@@ -240,10 +236,6 @@ AC_LINK_IFELSE([
         # if _WIN32_WINNT < 0x600
         #  error Needs vista+
         # endif
+        # if _WIN32_WINNT <= 0x603
+        #  undef WINAPI_FAMILY
+        #  define WINAPI_FAMILY WINAPI_FAMILY_DESKTOP_APP
+        # endif
         #include <winsock2.h>
         #else
         #include <poll.h>
@@ -259,10 +251,6 @@ AC_CHECK_TYPES([struct pollfd],,,
 #if HAVE_POLL
 # include <poll.h>
 #elif defined (_WIN32)
+# if _WIN32_WINNT <= 0x603
+#  undef WINAPI_FAMILY
+#  define WINAPI_FAMILY WINAPI_FAMILY_DESKTOP_APP
+# endif
 # include <winsock2.h>
 #endif
 ])
--- microdns.nok/src/mdns.c	2017-10-19 16:49:04.886317500 +0200
+++ microdns.nok/src/mdns.c.win81	2017-10-19 16:48:35.933273300 +0200
@@ -156,6 +156,7 @@ mdns_list_interfaces(multicast_if** pp_i
         size_t nb_intf = 0;
 
         *p_nb_intf = 0;
+#if _WIN32_WINNT >= 0x0A00 || !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
         /**
          * https://msdn.microsoft.com/en-us/library/aa365915.aspx
          *
@@ -180,6 +181,7 @@ mdns_list_interfaces(multicast_if** pp_i
                 free(res);
                 return (MDNS_NETERR);
         }
+#endif
 
         for (current = res; current != NULL; current = current->Next) {
                 if (!mdns_is_interface_valuable(current))
