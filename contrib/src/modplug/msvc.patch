--- libmodplug/src/libmodplug/stdafx.h  2014-03-10 00:52:07.000000000 +0100
+++ libmodplug.ok/src/libmodplug/stdafx.h       2015-06-25 18:47:50.236561100 +0200
@@ -52,6 +52,24 @@
 #define isblank(c) ((c) == ' ' || (c) == '\t')
 #endif

+#include <winapifamily.h>
+#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+#define lstrcpyn strncpy
+#define lstrcpy strcpy
+#define lstrcmp strcmp
+inline int8_t * GlobalAllocPtr(unsigned int, size_t size)
+{
+	int8_t * p = (int8_t *) malloc(size);
+
+	if (p != NULL) memset(p, 0, size);
+	return p;
+}
+
+#define GlobalFreePtr(p) free((void *)(p))
+#define wsprintf                       sprintf
+#define WAVE_FORMAT_PCM 1
+#endif
+
 #else

 #include <stdlib.h>

--- libmodplug-0.8.8.5/src/load_abc.cpp.orig	2016-03-01 13:39:26.620382400 +0100
+++ libmodplug-0.8.8.5/src/load_abc.cpp	2016-03-01 14:19:45.450225900 +0100
@@ -2251,11 +2251,11 @@ static void abc_preprocess(ABCHANDLE *h,
 	if( m->n ) {
 		k = m->n - m->name;
 		for( i=0; i<14; i++ ) {
-			char t[strlen(m->name) + 1];
+			char *t = (char*) alloca(strlen(m->name) + 1);
 			strcpy(t, m->name);
 			t[k] = "CDEFGABcdefgab"[i];
 			l = strlen(m->subst);
-			char s[2 * l + 1];
+			char *s = (char*) alloca(2 * l + 1);
 			char *p = s;
 			for( j=0; j<l; j++ ) {
 				a = m->subst[j];
--- libmodplug-0.8.8.5/src/load_amf.cpp.orig	2016-03-01 13:39:26.629889500 +0100
+++ libmodplug-0.8.8.5/src/load_amf.cpp	2016-03-01 14:19:15.174576600 +0100
@@ -170,7 +170,7 @@ BOOL CSoundFile::ReadAMF(LPCBYTE lpStrea
 	DWORD dwMemPos;
 	
 	if ((!lpStream) || (dwMemLength < 2048)) return FALSE;
-	if ((!strncmp((LPCTSTR)lpStream, "ASYLUM Music Format V1.0", 25)) && (dwMemLength > 4096))
+	if ((!strncmp((const char *)lpStream, "ASYLUM Music Format V1.0", 25)) && (dwMemLength > 4096))
 	{
 		UINT numorders, numpats, numsamples;
 
