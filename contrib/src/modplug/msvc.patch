--- libmodplug/src/libmodplug/stdafx.h  2014-03-10 00:52:07.000000000 +0100
+++ libmodplug.ok/src/libmodplug/stdafx.h       2015-06-25 18:47:50.236561100 +0200
@@ -52,6 +52,24 @@
 #define isblank(c) ((c) == ' ' || (c) == '\t')
 #endif

+#include <winapifamily.h>
+#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+#define lstrcpyn strncpy
+#define lstrcpy strcpy
+#define lstrcmp strcmp
+inline int8_t * GlobalAllocPtr(unsigned int, size_t size)
+{
+  int8_t * p = (int8_t *) malloc(size);
+
+  if (p != NULL) memset(p, 0, size);
+  return p;
+}
+
+#define GlobalFreePtr(p) free((void *)(p))
+#define wsprintf                       sprintf
+#define WAVE_FORMAT_PCM 1
+#endif
+
 #else

 #include <stdlib.h>

--- libmodplug/src/load_abc.cpp 2014-03-10 00:53:33.000000000 +0100
+++ libmodplug.ok/src/load_abc.cpp      2015-06-26 07:28:23.103429900 +0200
@@ -2251,11 +2251,11 @@
        if( m->n ) {
                k = m->n - m->name;
                for( i=0; i<14; i++ ) {
-                       char t[strlen(m->name) + 1];
+                       char *t = (char*) alloca(strlen(m->name) + 1);
                        strcpy(t, m->name);
                        t[k] = "CDEFGABcdefgab"[i];
                        l = strlen(m->subst);
-                       char s[2 * l + 1];
+                       char *s = (char*) alloca(2 * l + 1);
                        char *p = s;
                        for( j=0; j<l; j++ ) {
                                a = m->subst[j];

--- libmodplug/src/load_amf.cpp 2014-02-03 00:31:02.000000000 +0100
+++ libmodplug.ok/src/load_amf.cpp      2015-06-26 07:22:24.448916000 +0200
@@ -170,7 +170,7 @@
        DWORD dwMemPos;

        if ((!lpStream) || (dwMemLength < 2048)) return FALSE;
-       if ((!strncmp((LPCTSTR)lpStream, "ASYLUM Music Format V1.0", 25)) && (dwMemLength > 4096))
+       if ((!strncmp((const char *)lpStream, "ASYLUM Music Format V1.0", 25)) && (dwMemLength > 4096))
        {
                UINT numorders, numpats, numsamples;


